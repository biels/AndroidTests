/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Biel' at '7/21/16 9:35 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */
 import groovy.xml.*

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.6.2'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
    
    
	compile 'com.biel.xre:XHTMLReportingEngine:1.0.10'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

mainClassName = "com.biel.samplexre.Main"
run.group = "application"


task generateLog4jConfig{
	group "tools"
} << {
	def writer = new StringWriter()
	def xml = new MarkupBuilder(writer) 

	xml.Configuration(status: 'WARN') {
		Appenders{
			Console(name: 'Console', target: 'SYSTEM_OUT'){
				PatternLayout(patern: '%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n')
			}
		} 
		Loggers{
			Root(level: 'error'){
				AppenderRef(ref: 'Console')
			}
		}	    
	}
	def xmlFile = file('src/main/resources/log4j2.xml')
	xmlFile.delete()
	xmlFile.write(writer.toString())
}
